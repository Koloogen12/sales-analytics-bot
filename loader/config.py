import json
import os
from aiogram import Bot, Dispatcher

class Config:
    def __init__(self, config_path="config.json"):
        if os.path.exists(config_path):
            with open(config_path, "r", encoding="utf-8") as f:
                data = json.load(f)
        else:
            raise FileNotFoundError(f"‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª '{config_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        # === Telegram
        self.telegram_token = data.get("token")
        self.chat_id = data.get("chat_id")

        # === Google Sheets
        self.google_credentials_file = data.get("google_credentials_file", "credentials.json")
        self.google_sheet_id = data.get("google_sheet_id")

        self.google_sheet_name = data.get("google_sheet_name")  # deprecated
        self.google_sheet_name_import = data.get("google_sheet_name_import")  # –≤–∫–ª–∞–¥–∫–∞ "–ú–∞–π"
        self.google_sheet_name_gpt = data.get("google_sheet_name_gpt")        # –≤–∫–ª–∞–¥–∫–∞ "–õ–∏—Å—Ç"

        # === Google Forms (API)
        self.google_form_id = data.get("google_form_id")
        self.google_scopes = data.get("google_scopes", [
            "https://www.googleapis.com/auth/forms.responses.readonly",
            "https://www.googleapis.com/auth/spreadsheets"
        ])

        # === Google Forms (–∏–∑ —Ç–∞–±–ª–∏—Ü—ã)
        self.google_form_sheet_id = data.get("google_form_sheet_id")
        self.google_form_sheet_name = data.get("google_form_sheet_name")

        # === OpenAI
        self.openai_token = data.get("openai_token")
        self.openai_model = data.get("openai_model", "gpt-4")
        self.openai_prompt_file = data.get("openai_promt_file", "promt.txt")

        # === –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
        self.schedule_time = data.get("schedule_time", "23:59")

        # === –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
        assert self.google_form_id, "‚ùå Google Form ID –Ω–µ –∑–∞–¥–∞–Ω"
        assert self.google_sheet_id, "‚ùå Google Sheet ID –Ω–µ –∑–∞–¥–∞–Ω"
        assert self.google_sheet_name_import, "‚ùå google_sheet_name_import –Ω–µ –∑–∞–¥–∞–Ω"
        assert self.google_sheet_name_gpt, "‚ùå google_sheet_name_gpt –Ω–µ –∑–∞–¥–∞–Ω"

        # === –í—ã–≤–æ–¥
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:")
        print(f"ü§ñ Telegram Token: {self._short(self.telegram_token)}")
        print(f"üìÑ Google Sheet ID: {self._short(self.google_sheet_id)}")
        print(f"üìä –õ–∏—Å—Ç –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞: {self.google_sheet_name_import} | GPT-–∞–Ω–∞–ª–∏–∑: {self.google_sheet_name_gpt}")
        print(f"üìù Google Form ID: {self._short(self.google_form_id)}")
        print(f"üìò Prompt-—Ñ–∞–π–ª: {self.openai_prompt_file}")
        print(f"üîê –ú–æ–¥–µ–ª—å: {self.openai_model} | OpenAI Token: {self._short(self.openai_token)}")
        print(f"üïí –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {self.schedule_time}")

    def _short(self, val: str) -> str:
        return f"{val[:4]}...{val[-4:]}" if val else "‚ùå"

# === –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã ===
config = Config()
bot = Bot(token=config.telegram_token)
dispatcher = Dispatcher()
